#version 410

layout(quads, fractional_even_spacing, cw) in;

uniform sampler2D		heightMap;
uniform sampler2D       texUnit;
uniform float			heightStep;
uniform float			gridSpacing;
uniform int				scaleFactor;
uniform mat4			mMVP;

in vec2					posTC[];
out vec2				uvTE;

float rand(vec2 co)
{
   return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);
}

void main()
{
	{
	vec4		res;
	ivec2		tSize;
	vec2		div;				

		tSize						= textureSize(heightMap, 0) * scaleFactor;
		div							= tSize * 1.0/64.0;
		uvTE						= posTC[0].xy + gl_TessCoord.st/div;
		res.xz						= uvTE.st * tSize * gridSpacing;
		//res.y						= texture(heightMap, uvTE).r * heightStep;
      res.y                       = rand(res.xz) * 15;
		res.w						= 1.0;
	
		gl_Position = mMVP * res;
	}
}